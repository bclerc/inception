#1 [nginx internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [redis internal] load build definition from Dockerfile
#2 transferring dockerfile: 32B done
#2 DONE 0.0s

#3 [ftp internal] load build definition from Dockerfile
#3 transferring dockerfile: 32B done
#3 DONE 0.0s

#4 [mariadb internal] load build definition from Dockerfile
#4 transferring dockerfile: 32B done
#4 DONE 0.0s

#5 [wordpress internal] load build definition from Dockerfile
#5 transferring dockerfile: 32B done
#5 DONE 0.0s

#6 [nginx internal] load .dockerignore
#6 transferring context: 2B done
#6 DONE 0.0s

#7 [mariadb internal] load .dockerignore
#7 transferring context: 2B done
#7 DONE 0.0s

#8 [wordpress internal] load .dockerignore
#8 transferring context: 2B done
#8 DONE 0.0s

#9 [redis internal] load .dockerignore
#9 transferring context: 2B done
#9 DONE 0.0s

#10 [ftp internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [nginx internal] load metadata for docker.io/library/debian:buster
#11 DONE 0.6s

#12 [mariadb internal] load build context
#12 transferring context: 90B done
#12 DONE 0.0s

#13 [redis 3/4] RUN apt install -y redis-server
#13 CACHED

#14 [redis 4/4] RUN apt update
#14 CACHED

#15 [mariadb 3/8] RUN apt -y upgrade
#15 CACHED

#16 [mariadb 7/8] ADD srcs/my.cnf /etc/mysql/
#16 CACHED

#17 [mariadb 6/8] RUN chown mysql /var/run/mysqld
#17 CACHED

#18 [mariadb 4/8] RUN apt install -y mariadb-server
#18 CACHED

#19 [mariadb 5/8] RUN mkdir -p /var/run/mysqld/
#19 CACHED

#20 [mariadb 2/8] RUN apt update
#20 CACHED

#21 [mariadb 8/8] ADD srcs/start.sh /
#21 CACHED

#22 [ftp  3/16] RUN apt install -y vsftpd
#22 CACHED

#23 [ftp  4/16] RUN echo "RUN useradd ${FTP_USER_NAME} -d /home/${FTP_USER_NAME}"
#23 CACHED

#24 [ftp internal] load build context
#24 transferring context: 215B done
#24 DONE 0.0s

#25 [wordpress internal] load build context
#25 transferring context: 146B done
#25 DONE 0.0s

#26 [wordpress 4/8] RUN apt-get update && apt-get upgrade -y
#26 CACHED

#27 [wordpress 2/8] RUN apt-get update && apt-get upgrade -y
#27 CACHED

#28 [wordpress 7/8] ADD srcs/www.conf /etc/php/7.3/fpm/pool.d/
#28 CACHED

#29 [wordpress 6/8] ADD srcs/wordpress-entry-point.sh /
#29 CACHED

#30 [wordpress 3/8] RUN apt-get install -y php php-fpm php-mysql php-redis curl
#30 CACHED

#31 [wordpress 5/8] RUN mkdir -p /run/php
#31 CACHED

#32 [wordpress 8/8] ADD srcs/wp-config.php /
#32 CACHED

#33 [ftp 1/8] FROM docker.io/library/debian:buster@sha256:405f48fbb359190809bd91aac79c3f6c346c1e79878c839351c6a817db5e9fc4
#33 DONE 0.0s

#34 [nginx internal] load build context
#34 transferring context: 158B done
#34 DONE 0.0s

#35 [nginx 2/9] RUN apt update && apt upgrade -y
#35 CACHED

#36 [nginx 5/9] ADD srcs/default.conf /etc/nginx/conf.d/
#36 CACHED

#37 [nginx 3/9] RUN apt install -y nginx
#37 CACHED

#38 [nginx 4/9] RUN mkdir -p /etc/nginx/ssl
#38 CACHED

#39 [nginx 8/9] RUN chown -R root:root /etc/nginx/ssl
#39 CACHED

#40 [nginx 7/9] ADD cert/ca-cert.crt /etc/nginx/ssl/
#40 CACHED

#41 [nginx 6/9] ADD cert/ca-key.key /etc/nginx/ssl/
#41 CACHED

#42 [nginx 9/9] RUN chmod -R 600 /etc/nginx/ssl
#42 CACHED

#43 [wordpress] exporting to image
#43 exporting layers done
#43 writing image sha256:d8348c1cc6051dfef58e74889f4f043edd10e47592436a7cafe0386a9db81cdc done
#43 naming to docker.io/library/redis done
#43 writing image sha256:abf232428559482fc2b726bd9e0f431b72510f21c21de1b5afde975e7597449c done
#43 naming to docker.io/library/mariadb done
#43 writing image sha256:ce3b5c0133f7acca4d1f52b2113fc64ab0081375871c0649bacad18084abdd3b done
#43 naming to docker.io/library/nginx done
#43 writing image sha256:fbaa90189244c8fa7803b39d7488a4e16e8a1d1b3ff736945def2472218ed451 done
#43 naming to docker.io/library/wordpress done
#43 DONE 0.1s

#44 [ftp  5/16] RUN useradd ${FTP_USER_NAME} -d /home/${FTP_USER_NAME}
#44 0.218 Usage: useradd [options] LOGIN
#44 0.218        useradd -D
#44 0.218        useradd -D [options]
#44 0.218 
#44 0.218 Options:
#44 0.218   -b, --base-dir BASE_DIR       base directory for the home directory of the
#44 0.218                                 new account
#44 0.218   -c, --comment COMMENT         GECOS field of the new account
#44 0.218   -d, --home-dir HOME_DIR       home directory of the new account
#44 0.218   -D, --defaults                print or change default useradd configuration
#44 0.218   -e, --expiredate EXPIRE_DATE  expiration date of the new account
#44 0.218   -f, --inactive INACTIVE       password inactivity period of the new account
#44 0.218   -g, --gid GROUP               name or ID of the primary group of the new
#44 0.218                                 account
#44 0.218   -G, --groups GROUPS           list of supplementary groups of the new
#44 0.218                                 account
#44 0.218   -h, --help                    display this help message and exit
#44 0.218   -k, --skel SKEL_DIR           use this alternative skeleton directory
#44 0.218   -K, --key KEY=VALUE           override /etc/login.defs defaults
#44 0.218   -l, --no-log-init             do not add the user to the lastlog and
#44 0.218                                 faillog databases
#44 0.218   -m, --create-home             create the user's home directory
#44 0.218   -M, --no-create-home          do not create the user's home directory
#44 0.218   -N, --no-user-group           do not create a group with the same name as
#44 0.218                                 the user
#44 0.218   -o, --non-unique              allow to create users with duplicate
#44 0.218                                 (non-unique) UID
#44 0.218   -p, --password PASSWORD       encrypted password of the new account
#44 0.218   -r, --system                  create a system account
#44 0.218   -R, --root CHROOT_DIR         directory to chroot into
#44 0.218   -s, --shell SHELL             login shell of the new account
#44 0.218   -u, --uid UID                 user ID of the new account
#44 0.218   -U, --user-group              create a group with the same name as the user
#44 0.218   -Z, --selinux-user SEUSER     use a specific SEUSER for the SELinux user mapping
#44 0.218 
#44 ERROR: executor failed running [/bin/sh -c useradd ${FTP_USER_NAME} -d /home/${FTP_USER_NAME}]: exit code: 2
------
 > [ftp  5/16] RUN useradd ${FTP_USER_NAME} -d /home/${FTP_USER_NAME}:
#44 0.218   -o, --non-unique              allow to create users with duplicate
#44 0.218                                 (non-unique) UID
#44 0.218   -p, --password PASSWORD       encrypted password of the new account
#44 0.218   -r, --system                  create a system account
#44 0.218   -R, --root CHROOT_DIR         directory to chroot into
#44 0.218   -s, --shell SHELL             login shell of the new account
#44 0.218   -u, --uid UID                 user ID of the new account
#44 0.218   -U, --user-group              create a group with the same name as the user
#44 0.218   -Z, --selinux-user SEUSER     use a specific SEUSER for the SELinux user mapping
#44 0.218 
------
